{"version":3,"sources":["ToDoLists.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ToDoLists","props","className","aria-hidden","onClick","onSelect","id","text","App","useState","inputList","setInputList","Items","setItems","deleteItems","oldItems","filter","arrElem","index","type","placeholder","value","onChange","event","target","map","itemval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAmBeA,EAjBG,SAACC,GAKjB,OACE,mCACE,sBAAKC,UAAU,aAAf,UACA,mBAAGA,UAAU,cAAcC,cAAc,OAAOC,QAAW,WACzDH,EAAMI,SAASJ,EAAMK,OAErB,mCAAML,EAAMM,KAAZ,aCmDOC,EA7DH,WAER,MAAiCC,mBAAS,IAA1C,mBAAMC,EAAN,KAAiBC,EAAjB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAaMC,EAAc,SAACR,GACjBO,GAAS,SAACE,GACN,OAAOA,EAASC,QAAO,SAACC,EAASC,GAC7B,OAAOA,IAASZ,SAS5B,OACA,mCACA,qBAAKJ,UAAY,WAAjB,SACI,sBAAKA,UAAY,aAAjB,UACI,uBACA,2CACA,uBACA,uBAAOiB,KAAO,OAAOC,YAAc,cAAcC,MAASX,EAAWY,SA/B3D,SAACC,GACfZ,EAAaY,EAAMC,OAAOH,UA+BtB,wBAAQjB,QA3BI,WAChBS,GAAS,SAACE,GACN,MAAM,GAAN,mBAAWA,GAAX,CAAqBL,OAEzBC,EAAa,KAuBT,iBAGA,6BAGKC,EAAMa,KAAK,SAACC,EAASR,GACpB,OAAO,cAAC,EAAD,CAEPZ,GAAIY,EACJX,KAAQmB,EACRrB,SAAYS,GAHLI,gBCnCVS,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7de321ed.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ToDoLists = (props) => {\r\n\r\n  const deleteItems = () => {\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"todo_style\">\r\n      <i className=\"fa fa-times\" aria-hidden = \"true\" onClick = {() => {\r\n        props.onSelect(props.id);\r\n      }}/>\r\n        <li> {props.text} </li>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToDoLists;\r\n","import React, { useState } from 'react';\r\nimport ToDoLists from \"./ToDoLists\";\r\n\r\nconst App = () => {\r\n\r\n    const[inputList, setInputList] = useState(\"\");\r\n    const [Items, setItems] = useState([]);\r\n    const itemEvent = (event) => {\r\n        setInputList(event.target.value);\r\n\r\n    };\r\n\r\n    const listOfItems = () => {\r\n        setItems((oldItems) =>{\r\n            return [...oldItems, inputList];\r\n        });\r\n        setInputList('');\r\n\r\n    };\r\n    const deleteItems = (id) => {\r\n        setItems((oldItems) =>{\r\n            return oldItems.filter((arrElem, index) => {\r\n                return index!== id;\r\n\r\n            });\r\n        });\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n    <>\r\n    <div className = \"main_div\">\r\n        <div className = \"center_div\">\r\n            <br/>\r\n            <h1>ToDo List</h1>\r\n            <br/>\r\n            <input type = \"text\" placeholder = \"Add a Items\" value = {inputList} onChange = {itemEvent}/>\r\n            <button onClick = {listOfItems}> + </button>\r\n\r\n\r\n            <ol>\r\n               \r\n\r\n                {Items.map( (itemval, index)  => {\r\n                  return <ToDoLists\r\n                   key ={index}\r\n                  id={index} \r\n                  text = {itemval}\r\n                  onSelect = {deleteItems}\r\n                  />;\r\n                })}\r\n            </ol>\r\n\r\n        </div>\r\n\r\n    </div>\r\n    </>\r\n    );\r\n\r\n\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './App.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}